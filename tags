!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/matteo/Library/Mobile Documents/com~apple~CloudDocs/ecole/bac_3/rti/labo/rti/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
ARTICLE	./BD/CreationBD.cpp	/^} ARTICLE;$/;"	t	typeref:struct:__anon36513ea30108	file:
ARTICLE	./Client/windowclient.h	/^} ARTICLE; $/;"	t	typeref:struct:__anon9704973d0108
ARTICLEPANIER	./Client/windowclient.cpp	/^} ARTICLEPANIER;$/;"	t	typeref:struct:__anon6a8754180108	file:
ARTICLEPANIER	./Serveur/OVESP.h	/^} ARTICLEPANIER;$/;"	t	typeref:struct:__anon95eea5600108
AUTH_INCORRECT_PASSWORD	./Serveur/queries.h	/^    AUTH_INCORRECT_PASSWORD, \/\/ Mot de passe incorrect$/;"	e	enum:AuthenticationResult
AUTH_SUCCESS	./Serveur/queries.h	/^    AUTH_SUCCESS,           \/\/ Authentification r√©ussie$/;"	e	enum:AuthenticationResult
AUTH_USERNAME_NOT_FOUND	./Serveur/queries.h	/^    AUTH_USERNAME_NOT_FOUND  \/\/ Nom d'utilisateur introuvable$/;"	e	enum:AuthenticationResult
Accept	./Serveur/Tcp.cpp	/^	int Accept(int sEcoute,char *ipClient)$/;"	f	typeref:typename:int
AuthenticationResult	./Serveur/queries.h	/^enum AuthenticationResult {$/;"	g
ClientSocket	./Serveur/Tcp.cpp	/^	int ClientSocket(char* ipServeur,int portServeur)$/;"	f	typeref:typename:int
ConnexionBD	./Serveur/queries.c	/^MYSQL* ConnexionBD()$/;"	f	typeref:typename:MYSQL *
Echange	./Client/windowclient.cpp	/^void Echange(char* requete, char* reponse)$/;"	f	typeref:typename:void
Elm	./BD/CreationBD.cpp	/^ARTICLE Elm[] = $/;"	v	typeref:typename:ARTICLE[]
FctThread	./Serveur/Serveur.cpp	/^void* FctThread(void* p)$/;"	f	typeref:typename:void *
HandlerSIGINT	./Client/windowclient.cpp	/^void HandlerSIGINT(int s)$/;"	f	typeref:typename:void
HandlerSIGINT	./Serveur/Serveur.cpp	/^void HandlerSIGINT(int s)$/;"	f	typeref:typename:void
NB_MAX_CLIENTS	./Serveur/OVESP.h	/^#define NB_MAX_CLIENTS /;"	d
NB_THREADS_POOL	./Serveur/Serveur.cpp	/^int NB_THREADS_POOL = config["NB_THREADS_POOL"];$/;"	v	typeref:typename:int
OVESP_H	./Serveur/OVESP.h	/^#define OVESP_H$/;"	d
PORT_ACHAT	./Serveur/Serveur.cpp	/^int PORT_ACHAT = config["PORT_ACHAT"];$/;"	v	typeref:typename:int
QT_MOC_LITERAL	./Client/moc_windowclient.cpp	/^#define QT_MOC_LITERAL(/;"	d	file:
QUERIES_H	./Serveur/queries.h	/^#define QUERIES_H$/;"	d
REPERTOIRE_IMAGES	./Client/windowclient.cpp	/^#define REPERTOIRE_IMAGES /;"	d	file:
Receive	./Serveur/Tcp.cpp	/^	int Receive(int sSocket,char* data)$/;"	f	typeref:typename:int
SMOP	./Serveur/OVESP.cpp	/^bool SMOP(char* requete, char* reponse,int socket,ARTICLEPANIER *tabPanierServeur)$/;"	f	typeref:typename:bool
SMOP_Close	./Serveur/OVESP.cpp	/^void SMOP_Close()$/;"	f	typeref:typename:void
SMOP_Login	./Serveur/OVESP.cpp	/^enum AuthenticationResult SMOP_Login(const char* user,const char* password)$/;"	f	typeref:enum:AuthenticationResult
SMOP_Signup	./Serveur/OVESP.cpp	/^void SMOP_Signup(const char* user,const char* password){$/;"	f	typeref:typename:void
Send	./Serveur/Tcp.cpp	/^	int Send(int sSocket,char* data,int taille)$/;"	f	typeref:typename:int
ServerSocket	./Serveur/Tcp.cpp	/^	int ServerSocket(int port2)$/;"	f	typeref:typename:int
TAILLE_FILE_ATTENTE	./Serveur/Serveur.cpp	/^int TAILLE_FILE_ATTENTE = config["TAILLE_FILE_ATTENTE"];$/;"	v	typeref:typename:int
TAILLE_MAX_DATA	./Serveur/Tcp.h	/^#define TAILLE_MAX_DATA /;"	d
TCP_H	./Serveur/Tcp.h	/^#define TCP_H$/;"	d
TraitementConnexion	./Serveur/Serveur.cpp	/^void TraitementConnexion(int sService)$/;"	f	typeref:typename:void
UI_WINDOWCLIENT_H	./Client/ui_windowclient.h	/^#define UI_WINDOWCLIENT_H$/;"	d
Ui	./Client/ui_windowclient.h	/^namespace Ui {$/;"	n
Ui	./Client/windowclient.h	/^namespace Ui { class WindowClient; }$/;"	n
Ui_WindowClient	./Client/ui_windowclient.h	/^class Ui_WindowClient$/;"	c
WINDOWCLIENT_H	./Client/windowclient.h	/^#define WINDOWCLIENT_H$/;"	d
WindowClient	./Client/ui_windowclient.h	/^    class WindowClient: public Ui_WindowClient {};$/;"	c	namespace:Ui
WindowClient	./Client/windowclient.cpp	/^WindowClient::WindowClient(QWidget *parent) : QMainWindow(parent), ui(new Ui::WindowClient)$/;"	f	class:WindowClient
WindowClient	./Client/windowclient.h	/^class WindowClient : public QMainWindow$/;"	c
__anon36513ea30108	./BD/CreationBD.cpp	/^{$/;"	s	file:
__anon6a8754180108	./Client/windowclient.cpp	/^{$/;"	s	file:
__anon95eea5600108	./Serveur/OVESP.h	/^{$/;"	s
__anon9704973d0108	./Client/windowclient.h	/^{$/;"	s
addUser	./Serveur/queries.c	/^void addUser(const char *username, const char *password) {$/;"	f	typeref:typename:void
ajoute	./Serveur/OVESP.cpp	/^void ajoute(int socket)$/;"	f	typeref:typename:void
ajouteArticleTablePanier	./Client/windowclient.cpp	/^void WindowClient::ajouteArticleTablePanier(const char* article,float prix,int quantite)$/;"	f	class:WindowClient	typeref:typename:void
authenticateUser	./Serveur/queries.c	/^enum AuthenticationResult authenticateUser(const char *username, const char *password){$/;"	f	typeref:enum:AuthenticationResult
centralwidget	./Client/ui_windowclient.h	/^    QWidget *centralwidget;$/;"	m	class:Ui_WindowClient	typeref:typename:QWidget *
checkBoxNouveauClient	./Client/ui_windowclient.h	/^    QCheckBox *checkBoxNouveauClient;$/;"	m	class:Ui_WindowClient	typeref:typename:QCheckBox *
clients	./Serveur/OVESP.cpp	/^int clients[NB_MAX_CLIENTS];$/;"	v	typeref:typename:int[]
closeEvent	./Client/windowclient.cpp	/^void WindowClient::closeEvent(QCloseEvent *event)$/;"	f	class:WindowClient	typeref:typename:void
condSocketsAcceptees	./Serveur/Serveur.cpp	/^pthread_cond_t condSocketsAcceptees;$/;"	v	typeref:typename:pthread_cond_t
config	./Serveur/Serveur.cpp	/^std::map<std::string, int> config = loadConfig("Serveur\/config.txt");$/;"	v	typeref:typename:std::map<std::string,int>
data	./Client/moc_windowclient.cpp	/^    QByteArrayData data[10];$/;"	m	struct:qt_meta_stringdata_WindowClient_t	typeref:typename:QByteArrayData[10]	file:
dialogueErreur	./Client/windowclient.cpp	/^void WindowClient::dialogueErreur(const char* titre,const char* message)$/;"	f	class:WindowClient	typeref:typename:void
dialogueMessage	./Client/windowclient.cpp	/^void WindowClient::dialogueMessage(const char* titre,const char* message)$/;"	f	class:WindowClient	typeref:typename:void
estPresent	./Serveur/OVESP.cpp	/^int estPresent(int socket)$/;"	f	typeref:typename:int
frame	./Client/ui_windowclient.h	/^    QFrame *frame;$/;"	m	class:Ui_WindowClient	typeref:typename:QFrame *
frame_2	./Client/ui_windowclient.h	/^    QFrame *frame_2;$/;"	m	class:Ui_WindowClient	typeref:typename:QFrame *
getArticleById	./Serveur/queries.c	/^MYSQL_ROW getArticleById(int articleId) {$/;"	f	typeref:typename:MYSQL_ROW
getFactureByMaxId	./Serveur/queries.c	/^MYSQL_ROW getFactureByMaxId() {$/;"	f	typeref:typename:MYSQL_ROW
getIndiceArticleSelectionne	./Client/windowclient.cpp	/^int WindowClient::getIndiceArticleSelectionne()$/;"	f	class:WindowClient	typeref:typename:int
getMotDePasse	./Client/windowclient.cpp	/^const char* WindowClient::getMotDePasse()$/;"	f	class:WindowClient	typeref:typename:const char *
getNom	./Client/windowclient.cpp	/^const char* WindowClient::getNom()$/;"	f	class:WindowClient	typeref:typename:const char *
getQuantite	./Client/windowclient.cpp	/^int WindowClient::getQuantite()$/;"	f	class:WindowClient	typeref:typename:int
getUserIdByUsername	./Serveur/queries.c	/^int getUserIdByUsername(const char *username) {$/;"	f	typeref:typename:int
id	./BD/CreationBD.cpp	/^  int   id;$/;"	m	struct:__anon36513ea30108	typeref:typename:int	file:
id	./Client/windowclient.cpp	/^  int   id;$/;"	m	struct:__anon6a8754180108	typeref:typename:int	file:
id	./Client/windowclient.h	/^  int   id;$/;"	m	struct:__anon9704973d0108	typeref:typename:int
id	./Serveur/OVESP.h	/^  int   id;$/;"	m	struct:__anon95eea5600108	typeref:typename:int
image	./BD/CreationBD.cpp	/^  char  image[20];$/;"	m	struct:__anon36513ea30108	typeref:typename:char[20]	file:
image	./Client/windowclient.h	/^  char  image[20];$/;"	m	struct:__anon9704973d0108	typeref:typename:char[20]
indiceEcriture	./Serveur/Serveur.cpp	/^int indiceEcriture=0, indiceLecture=0;$/;"	v	typeref:typename:int
indiceLecture	./Serveur/Serveur.cpp	/^int indiceEcriture=0, indiceLecture=0;$/;"	v	typeref:typename:int
insererArticleAchete	./Serveur/queries.c	/^int insererArticleAchete(int idarticle, float prix, int stock, int idfacture) {$/;"	f	typeref:typename:int
insererFacture	./Serveur/queries.c	/^int insererFacture(int idClient, const char* date, int paye) {$/;"	f	typeref:typename:int
intitule	./BD/CreationBD.cpp	/^  char  intitule[20];$/;"	m	struct:__anon36513ea30108	typeref:typename:char[20]	file:
intitule	./Client/windowclient.cpp	/^  char  intitule[50];$/;"	m	struct:__anon6a8754180108	typeref:typename:char[50]	file:
intitule	./Client/windowclient.h	/^  char  intitule[20];$/;"	m	struct:__anon9704973d0108	typeref:typename:char[20]
isNouveauClientChecked	./Client/windowclient.cpp	/^int WindowClient::isNouveauClientChecked()$/;"	f	class:WindowClient	typeref:typename:int
label	./Client/ui_windowclient.h	/^    QLabel *label;$/;"	m	class:Ui_WindowClient	typeref:typename:QLabel *
label_2	./Client/ui_windowclient.h	/^    QLabel *label_2;$/;"	m	class:Ui_WindowClient	typeref:typename:QLabel *
label_3	./Client/ui_windowclient.h	/^    QLabel *label_3;$/;"	m	class:Ui_WindowClient	typeref:typename:QLabel *
label_4	./Client/ui_windowclient.h	/^    QLabel *label_4;$/;"	m	class:Ui_WindowClient	typeref:typename:QLabel *
label_5	./Client/ui_windowclient.h	/^    QLabel *label_5;$/;"	m	class:Ui_WindowClient	typeref:typename:QLabel *
label_6	./Client/ui_windowclient.h	/^    QLabel *label_6;$/;"	m	class:Ui_WindowClient	typeref:typename:QLabel *
label_7	./Client/ui_windowclient.h	/^    QLabel *label_7;$/;"	m	class:Ui_WindowClient	typeref:typename:QLabel *
label_8	./Client/ui_windowclient.h	/^    QLabel *label_8;$/;"	m	class:Ui_WindowClient	typeref:typename:QLabel *
label_9	./Client/ui_windowclient.h	/^    QLabel *label_9;$/;"	m	class:Ui_WindowClient	typeref:typename:QLabel *
lineEditArticle	./Client/ui_windowclient.h	/^    QLineEdit *lineEditArticle;$/;"	m	class:Ui_WindowClient	typeref:typename:QLineEdit *
lineEditMotDePasse	./Client/ui_windowclient.h	/^    QLineEdit *lineEditMotDePasse;$/;"	m	class:Ui_WindowClient	typeref:typename:QLineEdit *
lineEditNom	./Client/ui_windowclient.h	/^    QLineEdit *lineEditNom;$/;"	m	class:Ui_WindowClient	typeref:typename:QLineEdit *
lineEditPrixUnitaire	./Client/ui_windowclient.h	/^    QLineEdit *lineEditPrixUnitaire;$/;"	m	class:Ui_WindowClient	typeref:typename:QLineEdit *
lineEditPublicite	./Client/ui_windowclient.h	/^    QLineEdit *lineEditPublicite;$/;"	m	class:Ui_WindowClient	typeref:typename:QLineEdit *
lineEditStock	./Client/ui_windowclient.h	/^    QLineEdit *lineEditStock;$/;"	m	class:Ui_WindowClient	typeref:typename:QLineEdit *
lineEditTotal	./Client/ui_windowclient.h	/^    QLineEdit *lineEditTotal;$/;"	m	class:Ui_WindowClient	typeref:typename:QLineEdit *
loadConfig	./Serveur/Tcp.cpp	/^std::map<std::string, int> loadConfig(const std::string& filename) {$/;"	f	typeref:typename:std::map<std::string,int>
loginOK	./Client/windowclient.cpp	/^void WindowClient::loginOK()$/;"	f	class:WindowClient	typeref:typename:void
logoutOK	./Client/windowclient.cpp	/^void WindowClient::logoutOK()$/;"	f	class:WindowClient	typeref:typename:void
main	./BD/CreationBD.cpp	/^int main(int argc,char *argv[])$/;"	f	typeref:typename:int
main	./Client/mainclient.cpp	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./Serveur/Serveur.cpp	/^int main(){$/;"	f	typeref:typename:int
majCaddie	./Client/windowclient.cpp	/^void WindowClient::majCaddie()$/;"	f	class:WindowClient	typeref:typename:void
menubar	./Client/ui_windowclient.h	/^    QMenuBar *menubar;$/;"	m	class:Ui_WindowClient	typeref:typename:QMenuBar *
metaObject	./Client/moc_windowclient.cpp	/^const QMetaObject *WindowClient::metaObject() const$/;"	f	class:WindowClient	typeref:typename:const QMetaObject *
motDePasse	./Client/windowclient.h	/^    char motDePasse[20];$/;"	m	class:WindowClient	typeref:typename:char[20]
mutexClients	./Serveur/OVESP.cpp	/^pthread_mutex_t mutexClients = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
mutexSocketsAcceptees	./Serveur/Serveur.cpp	/^pthread_mutex_t mutexSocketsAcceptees;$/;"	v	typeref:typename:pthread_mutex_t
nbClients	./Serveur/OVESP.cpp	/^int nbClients = 0;$/;"	v	typeref:typename:int
nom	./Client/windowclient.h	/^    char nom[20];$/;"	m	class:WindowClient	typeref:typename:char[20]
numArticle	./Client/windowclient.cpp	/^int numArticle = 1;$/;"	v	typeref:typename:int
numClient	./Client/windowclient.cpp	/^int numClient;$/;"	v	typeref:typename:int
on_pushButtonAcheter_clicked	./Client/windowclient.cpp	/^void WindowClient::on_pushButtonAcheter_clicked()$/;"	f	class:WindowClient	typeref:typename:void
on_pushButtonLogin_clicked	./Client/windowclient.cpp	/^void WindowClient::on_pushButtonLogin_clicked()$/;"	f	class:WindowClient	typeref:typename:void
on_pushButtonLogout_clicked	./Client/windowclient.cpp	/^void WindowClient::on_pushButtonLogout_clicked()$/;"	f	class:WindowClient	typeref:typename:void
on_pushButtonPayer_clicked	./Client/windowclient.cpp	/^void WindowClient::on_pushButtonPayer_clicked()$/;"	f	class:WindowClient	typeref:typename:void
on_pushButtonPrecedent_clicked	./Client/windowclient.cpp	/^void WindowClient::on_pushButtonPrecedent_clicked()$/;"	f	class:WindowClient	typeref:typename:void
on_pushButtonSuivant_clicked	./Client/windowclient.cpp	/^void WindowClient::on_pushButtonSuivant_clicked()$/;"	f	class:WindowClient	typeref:typename:void
on_pushButtonSupprimer_clicked	./Client/windowclient.cpp	/^void WindowClient::on_pushButtonSupprimer_clicked()$/;"	f	class:WindowClient	typeref:typename:void
on_pushButtonViderPanier_clicked	./Client/windowclient.cpp	/^void WindowClient::on_pushButtonViderPanier_clicked()$/;"	f	class:WindowClient	typeref:typename:void
prix	./BD/CreationBD.cpp	/^  float prix;$/;"	m	struct:__anon36513ea30108	typeref:typename:float	file:
prix	./Client/windowclient.cpp	/^  double prix;$/;"	m	struct:__anon6a8754180108	typeref:typename:double	file:
prix	./Client/windowclient.h	/^  float prix;$/;"	m	struct:__anon9704973d0108	typeref:typename:float
prix	./Serveur/OVESP.h	/^  float prix;$/;"	m	struct:__anon95eea5600108	typeref:typename:float
pushButtonAcheter	./Client/ui_windowclient.h	/^    QPushButton *pushButtonAcheter;$/;"	m	class:Ui_WindowClient	typeref:typename:QPushButton *
pushButtonLogin	./Client/ui_windowclient.h	/^    QPushButton *pushButtonLogin;$/;"	m	class:Ui_WindowClient	typeref:typename:QPushButton *
pushButtonLogout	./Client/ui_windowclient.h	/^    QPushButton *pushButtonLogout;$/;"	m	class:Ui_WindowClient	typeref:typename:QPushButton *
pushButtonPayer	./Client/ui_windowclient.h	/^    QPushButton *pushButtonPayer;$/;"	m	class:Ui_WindowClient	typeref:typename:QPushButton *
pushButtonPrecedent	./Client/ui_windowclient.h	/^    QPushButton *pushButtonPrecedent;$/;"	m	class:Ui_WindowClient	typeref:typename:QPushButton *
pushButtonSuivant	./Client/ui_windowclient.h	/^    QPushButton *pushButtonSuivant;$/;"	m	class:Ui_WindowClient	typeref:typename:QPushButton *
pushButtonSupprimer	./Client/ui_windowclient.h	/^    QPushButton *pushButtonSupprimer;$/;"	m	class:Ui_WindowClient	typeref:typename:QPushButton *
pushButtonViderPanier	./Client/ui_windowclient.h	/^    QPushButton *pushButtonViderPanier;$/;"	m	class:Ui_WindowClient	typeref:typename:QPushButton *
qt_meta_data_WindowClient	./Client/moc_windowclient.cpp	/^static const uint qt_meta_data_WindowClient[] = {$/;"	v	typeref:typename:const uint[]	file:
qt_meta_stringdata_WindowClient	./Client/moc_windowclient.cpp	/^static const qt_meta_stringdata_WindowClient_t qt_meta_stringdata_WindowClient = {$/;"	v	typeref:typename:const qt_meta_stringdata_WindowClient_t	file:
qt_meta_stringdata_WindowClient_t	./Client/moc_windowclient.cpp	/^struct qt_meta_stringdata_WindowClient_t {$/;"	s	file:
qt_metacall	./Client/moc_windowclient.cpp	/^int WindowClient::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WindowClient	typeref:typename:int
qt_metacast	./Client/moc_windowclient.cpp	/^void *WindowClient::qt_metacast(const char *_clname)$/;"	f	class:WindowClient	typeref:typename:void *
qt_static_metacall	./Client/moc_windowclient.cpp	/^void WindowClient::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WindowClient	typeref:typename:void
quantite	./Client/windowclient.cpp	/^  int   quantite;  $/;"	m	struct:__anon6a8754180108	typeref:typename:int	file:
quantite	./Serveur/OVESP.h	/^  int   quantite;  $/;"	m	struct:__anon95eea5600108	typeref:typename:int
remplirArticle	./Client/windowclient.cpp	/^ARTICLE WindowClient::remplirArticle(char* m)$/;"	f	class:WindowClient	typeref:typename:ARTICLE
retire	./Serveur/OVESP.cpp	/^void retire(int socket)$/;"	f	typeref:typename:void
retranslateUi	./Client/ui_windowclient.h	/^    void retranslateUi(QMainWindow *WindowClient)$/;"	f	class:Ui_WindowClient	typeref:typename:void
sClient	./Client/windowclient.cpp	/^int sClient;$/;"	v	typeref:typename:int
sEcoute	./Serveur/Serveur.cpp	/^int sEcoute;$/;"	v	typeref:typename:int
scrollArea	./Client/ui_windowclient.h	/^    QScrollArea *scrollArea;$/;"	m	class:Ui_WindowClient	typeref:typename:QScrollArea *
scrollAreaWidgetContents	./Client/ui_windowclient.h	/^    QWidget *scrollAreaWidgetContents;$/;"	m	class:Ui_WindowClient	typeref:typename:QWidget *
setArticle	./Client/windowclient.cpp	/^void WindowClient::setArticle(const char* intitule,float prix,int stock,const char* image)$/;"	f	class:WindowClient	typeref:typename:void
setImage	./Client/windowclient.cpp	/^void WindowClient::setImage(const char* image)$/;"	f	class:WindowClient	typeref:typename:void
setMotDePasse	./Client/windowclient.cpp	/^void WindowClient::setMotDePasse(const char* Text)$/;"	f	class:WindowClient	typeref:typename:void
setNom	./Client/windowclient.cpp	/^void WindowClient::setNom(const char* Text)$/;"	f	class:WindowClient	typeref:typename:void
setPublicite	./Client/windowclient.cpp	/^void WindowClient::setPublicite(const char* Text)$/;"	f	class:WindowClient	typeref:typename:void
setTotal	./Client/windowclient.cpp	/^void WindowClient::setTotal(float total)$/;"	f	class:WindowClient	typeref:typename:void
setupUi	./Client/ui_windowclient.h	/^    void setupUi(QMainWindow *WindowClient)$/;"	f	class:Ui_WindowClient	typeref:typename:void
spinBoxQuantite	./Client/ui_windowclient.h	/^    QSpinBox *spinBoxQuantite;$/;"	m	class:Ui_WindowClient	typeref:typename:QSpinBox *
staticMetaObject	./Client/moc_windowclient.cpp	/^QT_INIT_METAOBJECT const QMetaObject WindowClient::staticMetaObject = { {$/;"	m	class:WindowClient	typeref:typename:QT_INIT_METAOBJECT const QMetaObject
statusbar	./Client/ui_windowclient.h	/^    QStatusBar *statusbar;$/;"	m	class:Ui_WindowClient	typeref:typename:QStatusBar *
stock	./BD/CreationBD.cpp	/^  int   stock;  $/;"	m	struct:__anon36513ea30108	typeref:typename:int	file:
stock	./Client/windowclient.h	/^  int   stock;  $/;"	m	struct:__anon9704973d0108	typeref:typename:int
stringdata0	./Client/moc_windowclient.cpp	/^    char stringdata0[249];$/;"	m	struct:qt_meta_stringdata_WindowClient_t	typeref:typename:char[249]	file:
tabPanierClient	./Client/windowclient.cpp	/^ARTICLEPANIER tabPanierClient[20];$/;"	v	typeref:typename:ARTICLEPANIER[20]
tableWidgetPanier	./Client/ui_windowclient.h	/^    QTableWidget *tableWidgetPanier;$/;"	m	class:Ui_WindowClient	typeref:typename:QTableWidget *
ui	./Client/windowclient.h	/^    Ui::WindowClient *ui;$/;"	m	class:WindowClient	typeref:typename:Ui::WindowClient *
updateArticleStock	./Serveur/queries.c	/^int updateArticleStock(int id, int newqte) {$/;"	f	typeref:typename:int
videTablePanier	./Client/windowclient.cpp	/^void WindowClient::videTablePanier()$/;"	f	class:WindowClient	typeref:typename:void
w	./Client/mainclient.cpp	/^WindowClient *w;$/;"	v	typeref:typename:WindowClient *
~WindowClient	./Client/windowclient.cpp	/^WindowClient::~WindowClient()$/;"	f	class:WindowClient
